#pragma checksum "D:\Users\larsk\Documents\BeCreative software\EscapeRoom\jumpPuzzle\jumpPuzzle\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "54f4af2b3a56789b402cbe997f938513de5eba79"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"54f4af2b3a56789b402cbe997f938513de5eba79", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"23ac09be4bcfaa7f9829a01d1a134874eaae1f3b", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "D:\Users\larsk\Documents\BeCreative software\EscapeRoom\jumpPuzzle\jumpPuzzle\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(45, 515, true);
            WriteLiteral(@"
<div class=""container"">
    <div class=""row"">
        <div class=""col-md-4 full-height"" style=""background-color: black; color: white;"">
            <button onclick=""DecodeInput()"">Uitvoeren</button>
            <textarea id=""codeArea"">
herhaal 
{
    beweeg(1);
    als(x = 10) {
        spring(100);
    }
}
            
</textarea>
        </div>
        <div class=""col-md-8 full-height"" style=""padding: 0;"">
            <canvas id=""gameCanvas""></canvas>
        </div>
    </div>
</div>

");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(579, 3170, true);
                WriteLiteral(@"
    <script src=""js/DataTree.js""></script>
    <script src=""js/ArrayExtensions.js""></script>
    <script>
    var canvas = document.getElementById(""gameCanvas"");
    canvas.width = canvas.offsetWidth;
    canvas.height = canvas.offsetHeight;
    var context = canvas.getContext(""2d"");


    //Draw the sprite
    var img = new Image();
    img.src = ""images/avery walking-b.svg"";

    const base_y = 400;
    const base_x = 0;
    var x = base_x;
    var y = base_y;

    var tree = new Tree(""CODE"");
    tree._root = new Node(""CODE"");
    var currentPlayNode = tree._root;
    var hasNewTree = false;

    Update();

    function Update() {
        context.clearRect(0, 0, canvas.width, canvas.height);
        context.fillStyle = ""#d90eef"";
        context.fillRect(600, 400, 500, 400);

        if (hasNewTree) {
            if (currentPlayNode.data == ""CODE"") {
                //traverse into the tree
                currentPlayNode = currentPlayNode.children[0];
            } else");
                WriteLiteral(@" if (currentPlayNode.data == ""herhaal"") {
                //traverse into the tree
                currentPlayNode = currentPlayNode.children[0];
            } else if (currentPlayNode.includes(""als"")) {
                var split = currentPlayNode.data.split('(', ')');
            }
        }

        context.drawImage(img, x, y, 75, 300);

        requestAnimationFrame(Update);
    }

    function DecodeInput() {
        tree = new Tree(""CODE"");
        const textArea = document.getElementById(""codeArea"");
        const text = textArea.value;
        const split = text.split(' ');
        const filtered = split.filter(function(el) {
            return el != null && el != ' ' && el != """";
        });
        const length = filtered.length;


        //reset canvas
        x = base_x;
        y = base_y;
        var tree = new Tree(""CODE"");
        tree._root = new Node(""CODE"");
        var currentRoot = tree._root;
        hasNewTree = false;

        for (let i = 0; i < length");
                WriteLiteral(@"; i++) {
            if (filtered[i].includes(""herhaal"")) {
                currentRoot.children.push(new Node(filtered[i]));
                currentRoot.children.last().parent = currentRoot;
                currentRoot = currentRoot.children.last();
            } else if (filtered[i].includes(""als"")) {
                currentRoot.children.push(new Node(filtered[i]));
                currentRoot.children.last().parent = currentRoot;
                currentRoot = currentRoot.children.last();
            } else if (filtered[i].includes(""beweeg"")) {
                currentRoot.children.push(new Node(filtered[i]));
                currentRoot.children.last().parent = currentRoot;
            } else if (filtered[i].includes(""spring"")) {
                currentRoot.children.push(new Node(filtered[i]));
                currentRoot.children.last().parent = currentRoot;
            } else if (filtered[i] == ""}"") {
                currentRoot = currentRoot.parent;
            }
        }
        var ");
                WriteLiteral("currentPlayNode = tree._root;\r\n        hasNewTree = true;\r\n        }\r\n       \r\n        </script>\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
